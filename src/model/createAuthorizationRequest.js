"use strict";
/**
 * Finix API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2022-02-01
 * Contact: support@finixpayments.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CreateAuthorizationRequest = void 0;
/**
* Create an `Authorization` resource.
*/
class CreateAuthorizationRequest {
    /**
    * Key value pair for annotating custom meta data (e.g. order numbers).
    */
    'tags';
    /**
    * The total amount that will be debited in cents (e.g. 100 cents to debit $1.00).
    */
    'amount';
    'currency';
    /**
    * A randomly generated value that\'ll be associated with the request.
    */
    'idempotencyId';
    /**
    * The ID of the resource.
    */
    'merchant';
    /**
    * The ID of the resource.
    */
    'merchantIdentity';
    /**
    * Name of the transaction processor.
    */
    'processor';
    /**
    * The ID of the resource.
    */
    'source';
    'additionalPurchaseData';
    /**
    * The `fraud_session_session` ID you want to review for fraud. For more info, see [Fraud Detection](/docs/guides/payments/fraud-detection/).
    */
    'fraudSessionId';
    'subType';
    'operationKey';
    /**
    * The ID of the resource.
    */
    'device';
    '_3dSecureAuthentication';
    static discriminator = undefined;
    static attributeTypeMap = [
        {
            "name": "tags",
            "baseName": "tags",
            "type": "{ [key: string]: string; }"
        },
        {
            "name": "amount",
            "baseName": "amount",
            "type": "number"
        },
        {
            "name": "currency",
            "baseName": "currency",
            "type": "Currency"
        },
        {
            "name": "idempotencyId",
            "baseName": "idempotency_id",
            "type": "string"
        },
        {
            "name": "merchant",
            "baseName": "merchant",
            "type": "string"
        },
        {
            "name": "merchantIdentity",
            "baseName": "merchant_identity",
            "type": "string"
        },
        {
            "name": "processor",
            "baseName": "processor",
            "type": "CreateAuthorizationRequest.ProcessorEnum"
        },
        {
            "name": "source",
            "baseName": "source",
            "type": "string"
        },
        {
            "name": "additionalPurchaseData",
            "baseName": "additional_purchase_data",
            "type": "AdditionalPurchaseData"
        },
        {
            "name": "fraudSessionId",
            "baseName": "fraud_session_id",
            "type": "string"
        },
        {
            "name": "subType",
            "baseName": "sub_type",
            "type": "SubTypeTransfer"
        },
        {
            "name": "operationKey",
            "baseName": "operation_key",
            "type": "OperationKey"
        },
        {
            "name": "device",
            "baseName": "device",
            "type": "string"
        },
        {
            "name": "_3dSecureAuthentication",
            "baseName": "3d_secure_authentication",
            "type": "CreateAuthorizationRequest3dSecureAuthentication"
        }
    ];
    static getAttributeTypeMap() {
        return CreateAuthorizationRequest.attributeTypeMap;
    }
}
exports.CreateAuthorizationRequest = CreateAuthorizationRequest;
(function (CreateAuthorizationRequest) {
    let ProcessorEnum;
    (function (ProcessorEnum) {
        ProcessorEnum[ProcessorEnum["AffipayV1"] = 'AFFIPAY_V1'] = "AffipayV1";
        ProcessorEnum[ProcessorEnum["CheckoutV1"] = 'CHECKOUT_V1'] = "CheckoutV1";
        ProcessorEnum[ProcessorEnum["DummyV1"] = 'DUMMY_V1'] = "DummyV1";
        ProcessorEnum[ProcessorEnum["ElavonV1"] = 'ELAVON_V1'] = "ElavonV1";
        ProcessorEnum[ProcessorEnum["ExpressV1"] = 'EXPRESS_V1'] = "ExpressV1";
        ProcessorEnum[ProcessorEnum["FinixVisaSandboxV1"] = 'FINIX_VISA_SANDBOX_V1'] = "FinixVisaSandboxV1";
        ProcessorEnum[ProcessorEnum["LitleV1"] = 'LITLE_V1'] = "LitleV1";
        ProcessorEnum[ProcessorEnum["MastercardV1"] = 'MASTERCARD_V1'] = "MastercardV1";
        ProcessorEnum[ProcessorEnum["MicrobiltV1"] = 'MICROBILT_V1'] = "MicrobiltV1";
        ProcessorEnum[ProcessorEnum["MythicalV1"] = 'MYTHICAL_V1'] = "MythicalV1";
        ProcessorEnum[ProcessorEnum["NmiV1"] = 'NMI_V1'] = "NmiV1";
        ProcessorEnum[ProcessorEnum["SkrillV1"] = 'SKRILL_V1'] = "SkrillV1";
        ProcessorEnum[ProcessorEnum["StripeV1"] = 'STRIPE_V1'] = "StripeV1";
        ProcessorEnum[ProcessorEnum["TriposCloudV1"] = 'TRIPOS_CLOUD_V1'] = "TriposCloudV1";
        ProcessorEnum[ProcessorEnum["TriposMobileV1"] = 'TRIPOS_MOBILE_V1'] = "TriposMobileV1";
        ProcessorEnum[ProcessorEnum["TruliooV1"] = 'TRULIOO_V1'] = "TruliooV1";
        ProcessorEnum[ProcessorEnum["VantivV1"] = 'VANTIV_V1'] = "VantivV1";
        ProcessorEnum[ProcessorEnum["VisaV1"] = 'VISA_V1'] = "VisaV1";
    })(ProcessorEnum = CreateAuthorizationRequest.ProcessorEnum || (CreateAuthorizationRequest.ProcessorEnum = {}));
})(CreateAuthorizationRequest = exports.CreateAuthorizationRequest || (exports.CreateAuthorizationRequest = {}));
