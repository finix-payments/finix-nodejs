"use strict";
/**
 * Finix API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2022-02-01
 * Contact: support@finixpayments.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.DeviceConfigDetails = void 0;
/**
* Information used to configure how the `Device` handles transactions.
*/
class DeviceConfigDetails {
    /**
    * Allow transaction to be processed on Debit rails. If **false**, Debit card transactions will be processed on Credit rails.
    */
    'allowDebit';
    /**
    * Sets whether the `Device` will check for duplicate transactions.
    */
    'checkForDuplicateTransactions';
    /**
    * Sets if the card holder needs to confirm the amount they will pay (defaults to **true**).
    */
    'promptAmountConfirmation';
    /**
    * Sets if the device defaults to manual entry as the default card input method. (defaults to **false**).
    */
    'promptManualEntry';
    /**
    * Sets if the device will prompt the card holder for a signature by default. Available values include: <ul><li><strong>ALWAYS</strong><li><strong>NEVER</strong><li><strong>AMOUNT</strong>: Used in conjunction with `signature_threshold_amount` so when the threshold is reached the signature form appears on the device.
    */
    'promptSignature';
    /**
    * The threshold to prompt a signature when `prompt_signature` is set to **AMOUNT** (defaults to 0).
    */
    'signatureThresholdAmount';
    /**
    * Sets whether or not the device will be used to capture transactions. This field must be set to **true** (defaults to **false**).
    */
    'bypassDeviceOnCapture';
    static discriminator = undefined;
    static attributeTypeMap = [
        {
            "name": "allowDebit",
            "baseName": "allow_debit",
            "type": "boolean"
        },
        {
            "name": "checkForDuplicateTransactions",
            "baseName": "check_for_duplicate_transactions",
            "type": "boolean"
        },
        {
            "name": "promptAmountConfirmation",
            "baseName": "prompt_amount_confirmation",
            "type": "boolean"
        },
        {
            "name": "promptManualEntry",
            "baseName": "prompt_manual_entry",
            "type": "boolean"
        },
        {
            "name": "promptSignature",
            "baseName": "prompt_signature",
            "type": "string"
        },
        {
            "name": "signatureThresholdAmount",
            "baseName": "signature_threshold_amount",
            "type": "number"
        },
        {
            "name": "bypassDeviceOnCapture",
            "baseName": "bypass_device_on_capture",
            "type": "boolean"
        }
    ];
    static getAttributeTypeMap() {
        return DeviceConfigDetails.attributeTypeMap;
    }
}
exports.DeviceConfigDetails = DeviceConfigDetails;
//# sourceMappingURL=deviceConfigDetails.js.map