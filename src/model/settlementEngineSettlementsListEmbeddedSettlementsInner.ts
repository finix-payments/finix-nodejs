/**
 * Finix API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2022-02-01
 * Contact: support@finixpayments.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { Currency } from './currency';
import { SettlementEngineSettlementLinks } from './settlementEngineSettlementLinks';

export class SettlementEngineSettlementsListEmbeddedSettlementsInner {
    /**
    * Key value pair for annotating custom meta data (e.g. order numbers).
    */
    'tags'?: { [key: string]: string; };
    /**
    * The ID of the resource.
    */
    'id'?: string | null;
    /**
    * Timestamp of when the object was created.
    */
    'createdAt'?: Date;
    /**
    * Timestamp of when the object was last updated.
    */
    'updatedAt'?: Date;
    'adjustmentCreditAmount'?: number;
    'adjustmentCreditCount'?: number;
    'adjustmentDebitAmount'?: number;
    'adjustmentDebitCount'?: number;
    /**
    * The ID of the resource.
    */
    'application'?: string;
    'autoCloseTime'?: Date | null;
    'currency'?: Currency;
    'disputeCreditAmount'?: number;
    'disputeCreditCount'?: number;
    'disputeDebitAmount'?: number;
    'disputeDebitCount'?: number;
    'exception'?: boolean;
    'feeCount'?: number;
    /**
    * The ID of the resource.
    */
    'identity'?: string | null;
    /**
    * The ID of the resource.
    */
    'merchant'?: string | null;
    'payoutPlan'?: string;
    'processorType'?: string;
    'reverseAmount'?: number;
    'reverseCount'?: number;
    'scheduleType'?: SettlementEngineSettlementsListEmbeddedSettlementsInner.ScheduleTypeEnum;
    'settlementGroup'?: string;
    'status'?: SettlementEngineSettlementsListEmbeddedSettlementsInner.StatusEnum;
    'totalAmount'?: number;
    'totalFeeAmount'?: number;
    'transferCreditAmount'?: number;
    'transferCreditCount'?: number;
    'transferDebitAmount'?: number;
    'transferDebitCount'?: number;
    'windowEnd'?: Date | null;
    'windowStart'?: Date | null;
    'links'?: SettlementEngineSettlementLinks;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "tags",
            "baseName": "tags",
            "type": "{ [key: string]: string; }"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "createdAt",
            "baseName": "created_at",
            "type": "Date"
        },
        {
            "name": "updatedAt",
            "baseName": "updated_at",
            "type": "Date"
        },
        {
            "name": "adjustmentCreditAmount",
            "baseName": "adjustment_credit_amount",
            "type": "number"
        },
        {
            "name": "adjustmentCreditCount",
            "baseName": "adjustment_credit_count",
            "type": "number"
        },
        {
            "name": "adjustmentDebitAmount",
            "baseName": "adjustment_debit_amount",
            "type": "number"
        },
        {
            "name": "adjustmentDebitCount",
            "baseName": "adjustment_debit_count",
            "type": "number"
        },
        {
            "name": "application",
            "baseName": "application",
            "type": "string"
        },
        {
            "name": "autoCloseTime",
            "baseName": "auto_close_time",
            "type": "Date"
        },
        {
            "name": "currency",
            "baseName": "currency",
            "type": "Currency"
        },
        {
            "name": "disputeCreditAmount",
            "baseName": "dispute_credit_amount",
            "type": "number"
        },
        {
            "name": "disputeCreditCount",
            "baseName": "dispute_credit_count",
            "type": "number"
        },
        {
            "name": "disputeDebitAmount",
            "baseName": "dispute_debit_amount",
            "type": "number"
        },
        {
            "name": "disputeDebitCount",
            "baseName": "dispute_debit_count",
            "type": "number"
        },
        {
            "name": "exception",
            "baseName": "exception",
            "type": "boolean"
        },
        {
            "name": "feeCount",
            "baseName": "fee_count",
            "type": "number"
        },
        {
            "name": "identity",
            "baseName": "identity",
            "type": "string"
        },
        {
            "name": "merchant",
            "baseName": "merchant",
            "type": "string"
        },
        {
            "name": "payoutPlan",
            "baseName": "payout_plan",
            "type": "string"
        },
        {
            "name": "processorType",
            "baseName": "processor_type",
            "type": "string"
        },
        {
            "name": "reverseAmount",
            "baseName": "reverse_amount",
            "type": "number"
        },
        {
            "name": "reverseCount",
            "baseName": "reverse_count",
            "type": "number"
        },
        {
            "name": "scheduleType",
            "baseName": "schedule_type",
            "type": "SettlementEngineSettlementsListEmbeddedSettlementsInner.ScheduleTypeEnum"
        },
        {
            "name": "settlementGroup",
            "baseName": "settlement_group",
            "type": "string"
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "SettlementEngineSettlementsListEmbeddedSettlementsInner.StatusEnum"
        },
        {
            "name": "totalAmount",
            "baseName": "total_amount",
            "type": "number"
        },
        {
            "name": "totalFeeAmount",
            "baseName": "total_fee_amount",
            "type": "number"
        },
        {
            "name": "transferCreditAmount",
            "baseName": "transfer_credit_amount",
            "type": "number"
        },
        {
            "name": "transferCreditCount",
            "baseName": "transfer_credit_count",
            "type": "number"
        },
        {
            "name": "transferDebitAmount",
            "baseName": "transfer_debit_amount",
            "type": "number"
        },
        {
            "name": "transferDebitCount",
            "baseName": "transfer_debit_count",
            "type": "number"
        },
        {
            "name": "windowEnd",
            "baseName": "window_end",
            "type": "Date"
        },
        {
            "name": "windowStart",
            "baseName": "window_start",
            "type": "Date"
        },
        {
            "name": "links",
            "baseName": "_links",
            "type": "SettlementEngineSettlementLinks"
        }    ];

    static getAttributeTypeMap() {
        return SettlementEngineSettlementsListEmbeddedSettlementsInner.attributeTypeMap;
    }
}

export namespace SettlementEngineSettlementsListEmbeddedSettlementsInner {
    export enum ScheduleTypeEnum {
        Daily = <any> 'DAILY',
        Monthly = <any> 'MONTHLY',
        Continuous = <any> 'CONTINUOUS'
    }
    export enum StatusEnum {
        Approved = <any> 'APPROVED',
        AwaitingApproval = <any> 'AWAITING_APPROVAL',
        Cancelled = <any> 'CANCELLED',
        Pending = <any> 'PENDING',
        Staged = <any> 'STAGED'
    }
}
