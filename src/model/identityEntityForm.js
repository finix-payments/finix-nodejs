"use strict";
/**
 * Finix API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2022-02-01
 * Contact: support@finixpayments.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.IdentityEntityForm = void 0;
/**
* Information needed to verify the identity of the entity.
*/
class IdentityEntityForm {
    static getAttributeTypeMap() {
        return IdentityEntityForm.attributeTypeMap;
    }
}
exports.IdentityEntityForm = IdentityEntityForm;
IdentityEntityForm.discriminator = undefined;
IdentityEntityForm.attributeTypeMap = [
    {
        "name": "title",
        "baseName": "title",
        "type": "string"
    },
    {
        "name": "amexMid",
        "baseName": "amex_mid",
        "type": "string"
    },
    {
        "name": "annualCardVolume",
        "baseName": "annual_card_volume",
        "type": "number"
    },
    {
        "name": "businessAddress",
        "baseName": "business_address",
        "type": "IdentityEntityFormBusinessAddress"
    },
    {
        "name": "businessName",
        "baseName": "business_name",
        "type": "string"
    },
    {
        "name": "businessPhone",
        "baseName": "business_phone",
        "type": "string"
    },
    {
        "name": "businessTaxId",
        "baseName": "business_tax_id",
        "type": "string"
    },
    {
        "name": "businessType",
        "baseName": "business_type",
        "type": "IdentityEntityForm.BusinessTypeEnum"
    },
    {
        "name": "defaultStatementDescriptor",
        "baseName": "default_statement_descriptor",
        "type": "string"
    },
    {
        "name": "discoverMid",
        "baseName": "discover_mid",
        "type": "string"
    },
    {
        "name": "dob",
        "baseName": "dob",
        "type": "IdentityEntityFormDob"
    },
    {
        "name": "doingBusinessAs",
        "baseName": "doing_business_as",
        "type": "string"
    },
    {
        "name": "email",
        "baseName": "email",
        "type": "string"
    },
    {
        "name": "firstName",
        "baseName": "first_name",
        "type": "string"
    },
    {
        "name": "hasAcceptedCreditCardsPreviously",
        "baseName": "has_accepted_credit_cards_previously",
        "type": "boolean"
    },
    {
        "name": "incorporationDate",
        "baseName": "incorporation_date",
        "type": "IdentityEntityFormIncorporationDate"
    },
    {
        "name": "lastName",
        "baseName": "last_name",
        "type": "string"
    },
    {
        "name": "maxTransactionAmount",
        "baseName": "max_transaction_amount",
        "type": "number"
    },
    {
        "name": "mcc",
        "baseName": "mcc",
        "type": "string"
    },
    {
        "name": "ownershipType",
        "baseName": "ownership_type",
        "type": "IdentityEntityForm.OwnershipTypeEnum"
    },
    {
        "name": "personalAddress",
        "baseName": "personal_address",
        "type": "Address"
    },
    {
        "name": "phone",
        "baseName": "phone",
        "type": "string"
    },
    {
        "name": "principalPercentageOwnership",
        "baseName": "principal_percentage_ownership",
        "type": "number"
    },
    {
        "name": "shortBusinessName",
        "baseName": "short_business_name",
        "type": "string"
    },
    {
        "name": "taxAuthority",
        "baseName": "tax_authority",
        "type": "string"
    },
    {
        "name": "taxId",
        "baseName": "tax_id",
        "type": "string"
    },
    {
        "name": "url",
        "baseName": "url",
        "type": "string"
    }
];
(function (IdentityEntityForm) {
    let BusinessTypeEnum;
    (function (BusinessTypeEnum) {
        BusinessTypeEnum[BusinessTypeEnum["IndividualSoleProprietorship"] = 'INDIVIDUAL_SOLE_PROPRIETORSHIP'] = "IndividualSoleProprietorship";
        BusinessTypeEnum[BusinessTypeEnum["Corporation"] = 'CORPORATION'] = "Corporation";
        BusinessTypeEnum[BusinessTypeEnum["LimitedLiabilityCompany"] = 'LIMITED_LIABILITY_COMPANY'] = "LimitedLiabilityCompany";
        BusinessTypeEnum[BusinessTypeEnum["Partnership"] = 'PARTNERSHIP'] = "Partnership";
        BusinessTypeEnum[BusinessTypeEnum["LimitedPartnership"] = 'LIMITED_PARTNERSHIP'] = "LimitedPartnership";
        BusinessTypeEnum[BusinessTypeEnum["GeneralPartnership"] = 'GENERAL_PARTNERSHIP'] = "GeneralPartnership";
        BusinessTypeEnum[BusinessTypeEnum["AssociationEstateTrust"] = 'ASSOCIATION_ESTATE_TRUST'] = "AssociationEstateTrust";
        BusinessTypeEnum[BusinessTypeEnum["TaxExemptOrganization"] = 'TAX_EXEMPT_ORGANIZATION'] = "TaxExemptOrganization";
        BusinessTypeEnum[BusinessTypeEnum["InternationalOrganization"] = 'INTERNATIONAL_ORGANIZATION'] = "InternationalOrganization";
        BusinessTypeEnum[BusinessTypeEnum["GovernmentAgency"] = 'GOVERNMENT_AGENCY'] = "GovernmentAgency";
        BusinessTypeEnum[BusinessTypeEnum["JointVenture"] = 'JOINT_VENTURE'] = "JointVenture";
    })(BusinessTypeEnum = IdentityEntityForm.BusinessTypeEnum || (IdentityEntityForm.BusinessTypeEnum = {}));
    let OwnershipTypeEnum;
    (function (OwnershipTypeEnum) {
        OwnershipTypeEnum[OwnershipTypeEnum["Private"] = 'PRIVATE'] = "Private";
        OwnershipTypeEnum[OwnershipTypeEnum["Public"] = 'PUBLIC'] = "Public";
    })(OwnershipTypeEnum = IdentityEntityForm.OwnershipTypeEnum || (IdentityEntityForm.OwnershipTypeEnum = {}));
})(IdentityEntityForm = exports.IdentityEntityForm || (exports.IdentityEntityForm = {}));
//# sourceMappingURL=identityEntityForm.js.map