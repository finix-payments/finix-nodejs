"use strict";
/**
 * Finix API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2022-02-01
 * Contact: support@finixpayments.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.Settlement = void 0;
/**
*
*/
class Settlement {
    /**
    * Key value pair for annotating custom meta data (e.g. order numbers).
    */
    'tags';
    /**
    * Type of `Settlement`.
    */
    'type';
    /**
    * The ID of the resource.
    */
    'id';
    /**
    * Timestamp of when the object was created.
    */
    'createdAt';
    /**
    * Timestamp of when the object was last updated.
    */
    'updatedAt';
    /**
    * The ID of the `Application` resource the `Settlement` was created under.
    */
    'application';
    'currency';
    /**
    * ID of the `Payment Instrument` where funds will be sent.
    */
    'destination';
    /**
    * Details how funds will be dispersed in the `Funding Transfer` (usually **null**).
    */
    'fundsFlow';
    /**
    * The ID of the resource.
    */
    'identity';
    /**
    * The ID of the resource.
    */
    'merchantId';
    /**
    * The amount in cents that will be deposited into the merchant\'s bank account.
    */
    'netAmount';
    /**
    * The type of `Payment Instrument` used in the `Funding Transfer` (or the original payment).
    */
    'paymentType';
    /**
    * Name of the `Settlement` processor.
    */
    'processor';
    /**
    * The status of the `Settlement`. Available values include:<ul><li>**PENDING**<li>**STAGED**<li>**AWAITING_APPROVAL**<li>**APPROVED**.</ul> Merchants only receive payouts when `Settlements` are **APPROVED**. For more information, see [Payouts](/guides/payouts/payouts/).
    */
    'status';
    /**
    * Total amount of the `Settlement` (in cents).
    */
    'totalAmount';
    /**
    * Sum of the fees in the `Settlement`.
    */
    'totalFee';
    /**
    * Sum of the fees in the `Settlement`.
    */
    'totalFees';
    'links';
    static discriminator = undefined;
    static attributeTypeMap = [
        {
            "name": "tags",
            "baseName": "tags",
            "type": "{ [key: string]: string; }"
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "Settlement.TypeEnum"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "createdAt",
            "baseName": "created_at",
            "type": "Date"
        },
        {
            "name": "updatedAt",
            "baseName": "updated_at",
            "type": "Date"
        },
        {
            "name": "application",
            "baseName": "application",
            "type": "string"
        },
        {
            "name": "currency",
            "baseName": "currency",
            "type": "Currency"
        },
        {
            "name": "destination",
            "baseName": "destination",
            "type": "string"
        },
        {
            "name": "fundsFlow",
            "baseName": "funds_flow",
            "type": "string"
        },
        {
            "name": "identity",
            "baseName": "identity",
            "type": "string"
        },
        {
            "name": "merchantId",
            "baseName": "merchant_id",
            "type": "string"
        },
        {
            "name": "netAmount",
            "baseName": "net_amount",
            "type": "number"
        },
        {
            "name": "paymentType",
            "baseName": "payment_type",
            "type": "string"
        },
        {
            "name": "processor",
            "baseName": "processor",
            "type": "string"
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "Settlement.StatusEnum"
        },
        {
            "name": "totalAmount",
            "baseName": "total_amount",
            "type": "number"
        },
        {
            "name": "totalFee",
            "baseName": "total_fee",
            "type": "number"
        },
        {
            "name": "totalFees",
            "baseName": "total_fees",
            "type": "number"
        },
        {
            "name": "links",
            "baseName": "_links",
            "type": "SettlementLinks"
        }
    ];
    static getAttributeTypeMap() {
        return Settlement.attributeTypeMap;
    }
}
exports.Settlement = Settlement;
(function (Settlement) {
    let TypeEnum;
    (function (TypeEnum) {
        TypeEnum[TypeEnum["MerchantRevenue"] = 'MERCHANT_REVENUE'] = "MerchantRevenue";
        TypeEnum[TypeEnum["PlatformFee"] = 'PLATFORM_FEE'] = "PlatformFee";
        TypeEnum[TypeEnum["PartnerFee"] = 'PARTNER_FEE'] = "PartnerFee";
        TypeEnum[TypeEnum["Noop"] = 'NOOP'] = "Noop";
        TypeEnum[TypeEnum["Merchant"] = 'MERCHANT'] = "Merchant";
        TypeEnum[TypeEnum["Application"] = 'APPLICATION'] = "Application";
        TypeEnum[TypeEnum["Platform"] = 'PLATFORM'] = "Platform";
    })(TypeEnum = Settlement.TypeEnum || (Settlement.TypeEnum = {}));
    let StatusEnum;
    (function (StatusEnum) {
        StatusEnum[StatusEnum["Approved"] = 'APPROVED'] = "Approved";
        StatusEnum[StatusEnum["AwaitingApproval"] = 'AWAITING_APPROVAL'] = "AwaitingApproval";
        StatusEnum[StatusEnum["Cancelled"] = 'CANCELLED'] = "Cancelled";
        StatusEnum[StatusEnum["Pending"] = 'PENDING'] = "Pending";
        StatusEnum[StatusEnum["Staged"] = 'STAGED'] = "Staged";
    })(StatusEnum = Settlement.StatusEnum || (Settlement.StatusEnum = {}));
})(Settlement = exports.Settlement || (exports.Settlement = {}));
