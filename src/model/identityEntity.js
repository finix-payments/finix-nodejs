"use strict";
/**
 * Finix API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2022-02-01
 * Contact: support@finixpayments.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.IdentityEntity = void 0;
/**
* The underwriting details required to verify the `Identity` of the `Merchant`.
*/
class IdentityEntity {
    static getAttributeTypeMap() {
        return IdentityEntity.attributeTypeMap;
    }
}
exports.IdentityEntity = IdentityEntity;
IdentityEntity.discriminator = undefined;
IdentityEntity.attributeTypeMap = [
    {
        "name": "title",
        "baseName": "title",
        "type": "string"
    },
    {
        "name": "firstName",
        "baseName": "first_name",
        "type": "string"
    },
    {
        "name": "lastName",
        "baseName": "last_name",
        "type": "string"
    },
    {
        "name": "email",
        "baseName": "email",
        "type": "string"
    },
    {
        "name": "businessName",
        "baseName": "business_name",
        "type": "string"
    },
    {
        "name": "businessType",
        "baseName": "business_type",
        "type": "string"
    },
    {
        "name": "doingBusinessAs",
        "baseName": "doing_business_as",
        "type": "string"
    },
    {
        "name": "phone",
        "baseName": "phone",
        "type": "string"
    },
    {
        "name": "businessPhone",
        "baseName": "business_phone",
        "type": "string"
    },
    {
        "name": "personalAddress",
        "baseName": "personal_address",
        "type": "IdentityEntityPersonalAddress"
    },
    {
        "name": "businessAddress",
        "baseName": "business_address",
        "type": "IdentityEntityBusinessAddress"
    },
    {
        "name": "mcc",
        "baseName": "mcc",
        "type": "string"
    },
    {
        "name": "dob",
        "baseName": "dob",
        "type": "IdentityEntityDob"
    },
    {
        "name": "maxTransactionAmount",
        "baseName": "max_transaction_amount",
        "type": "number"
    },
    {
        "name": "amexMid",
        "baseName": "amex_mid",
        "type": "number"
    },
    {
        "name": "discoverMid",
        "baseName": "discover_mid",
        "type": "number"
    },
    {
        "name": "url",
        "baseName": "url",
        "type": "string"
    },
    {
        "name": "annualCardVolume",
        "baseName": "annual_card_volume",
        "type": "number"
    },
    {
        "name": "hasAcceptedCreditCardsPreviously",
        "baseName": "has_accepted_credit_cards_previously",
        "type": "boolean"
    },
    {
        "name": "incorporationDate",
        "baseName": "incorporation_date",
        "type": "IdentityEntityIncorporationDate"
    },
    {
        "name": "principalPercentageOwnership",
        "baseName": "principal_percentage_ownership",
        "type": "number"
    },
    {
        "name": "shortBusinessName",
        "baseName": "short_business_name",
        "type": "string"
    },
    {
        "name": "ownershipType",
        "baseName": "ownership_type",
        "type": "IdentityEntity.OwnershipTypeEnum"
    },
    {
        "name": "taxAuthority",
        "baseName": "tax_authority",
        "type": "string"
    },
    {
        "name": "taxIdProvided",
        "baseName": "tax_id_provided",
        "type": "boolean"
    },
    {
        "name": "businessTaxIdProvided",
        "baseName": "business_tax_id_provided",
        "type": "boolean"
    },
    {
        "name": "defaultStatementDescriptor",
        "baseName": "default_statement_descriptor",
        "type": "string"
    }
];
(function (IdentityEntity) {
    let OwnershipTypeEnum;
    (function (OwnershipTypeEnum) {
        OwnershipTypeEnum[OwnershipTypeEnum["Public"] = 'PUBLIC'] = "Public";
        OwnershipTypeEnum[OwnershipTypeEnum["Private"] = 'PRIVATE'] = "Private";
    })(OwnershipTypeEnum = IdentityEntity.OwnershipTypeEnum || (IdentityEntity.OwnershipTypeEnum = {}));
})(IdentityEntity = exports.IdentityEntity || (exports.IdentityEntity = {}));
