/**
 * Finix API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2022-02-01
 * Contact: support@finixpayments.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { Currency } from './currency';
import { ListLinks } from './listLinks';

/**
* A `balance_transfer` object.
*/
export class BalanceTransfer {
    /**
    * ID of the `balance_transfer` resource.
    */
    'id'?: string;
    /**
    * Timestamp of when the object was created.
    */
    'createdAt'?: Date;
    /**
    * Timestamp of when the object was last updated.
    */
    'updatedAt'?: Date;
    /**
    * The total amount that will be debited in cents (e.g. 100 cents to debit $1.00).
    */
    'amount'?: number;
    'currency'?: Currency;
    /**
    * Additional information about the `balance_transfer` (e.g. **Transferring funds for Holidays**).
    */
    'description'?: string;
    /**
    * ID of the `Payment Instrument` where funds will be sent.
    */
    'destination'?: string;
    /**
    * ID generated by partner and returned to Finix.
    */
    'externalReferenceId'?: string;
    /**
    * Pass **LITLE_V1**; `balance_transfers` are only avalible for platforms with **LITLE_V1** credentials.
    */
    'processorType'?: string;
    /**
    * ID generated by Finix and sent to the partner.
    */
    'referenceId'?: string;
    /**
    * ID of the `Payment Instrument` where funds get debited.
    */
    'source'?: string;
    /**
    * The `state` of the `balance_transfer`.
    */
    'state'?: BalanceTransfer.StateEnum;
    /**
    * Key value pair for annotating custom meta data (e.g. order numbers).
    */
    'tags'?: { [key: string]: string; };
    'links'?: ListLinks;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "createdAt",
            "baseName": "created_at",
            "type": "Date"
        },
        {
            "name": "updatedAt",
            "baseName": "updated_at",
            "type": "Date"
        },
        {
            "name": "amount",
            "baseName": "amount",
            "type": "number"
        },
        {
            "name": "currency",
            "baseName": "currency",
            "type": "Currency"
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string"
        },
        {
            "name": "destination",
            "baseName": "destination",
            "type": "string"
        },
        {
            "name": "externalReferenceId",
            "baseName": "external_reference_id",
            "type": "string"
        },
        {
            "name": "processorType",
            "baseName": "processor_type",
            "type": "string"
        },
        {
            "name": "referenceId",
            "baseName": "reference_id",
            "type": "string"
        },
        {
            "name": "source",
            "baseName": "source",
            "type": "string"
        },
        {
            "name": "state",
            "baseName": "state",
            "type": "BalanceTransfer.StateEnum"
        },
        {
            "name": "tags",
            "baseName": "tags",
            "type": "{ [key: string]: string; }"
        },
        {
            "name": "links",
            "baseName": "_links",
            "type": "ListLinks"
        }    ];

    static getAttributeTypeMap() {
        return BalanceTransfer.attributeTypeMap;
    }
}

export namespace BalanceTransfer {
    export enum StateEnum {
        Created = <any> 'CREATED',
        Submitting = <any> 'SUBMITTING',
        Submitted = <any> 'SUBMITTED',
        Succeeded = <any> 'SUCCEEDED',
        Failed = <any> 'FAILED',
        Returned = <any> 'RETURNED',
        Unknowm = <any> 'UNKNOWM'
    }
}
