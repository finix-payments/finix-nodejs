"use strict";
/**
 * Finix API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2022-02-01
 * Contact: support@finixpayments.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CardPresentInstrumentForm = void 0;
/**
* Details the `Payment Instrument` that the `Transfer` debits or credits.
*/
class CardPresentInstrumentForm {
    /**
    * The type of `Payment Instrument`.
    */
    'type';
    'availableAccountType';
    /**
    * Encrypted card data used to process the transaction.
    */
    'emvData';
    /**
    * Encrypted EMV card data about the key serial number used to process the transaction.
    */
    'emvDataKeySerialNumber';
    /**
    * Encrypted EMV card data. Required if using an encrypted device.
    */
    'encryptedEmvData';
    /**
    * EMV encryption format provided from integrated encryption devices (defaults to **0**).
    */
    'encryptedEmvFormat';
    /**
    * Expiration month of the `Payment Instrument` (e.g. 12 for December).
    */
    'expirationMonth';
    /**
    * 4-digit expiration year of the `Payment Instrument`.
    */
    'expirationYear';
    /**
    * The first name of the `Payment Instrument` owner.
    */
    'firstName';
    /**
    * The last name of the `Payment Instrument` owner.
    */
    'lastName';
    'name';
    /**
    * Primary card account number (no dashes in between numbers).
    */
    'number';
    static discriminator = undefined;
    static attributeTypeMap = [
        {
            "name": "type",
            "baseName": "type",
            "type": "CardPresentInstrumentForm.TypeEnum"
        },
        {
            "name": "availableAccountType",
            "baseName": "available_account_type",
            "type": "CardPresentInstrumentForm.AvailableAccountTypeEnum"
        },
        {
            "name": "emvData",
            "baseName": "emv_data",
            "type": "string"
        },
        {
            "name": "emvDataKeySerialNumber",
            "baseName": "emv_data_key_serial_number",
            "type": "string"
        },
        {
            "name": "encryptedEmvData",
            "baseName": "encrypted_emv_data",
            "type": "string"
        },
        {
            "name": "encryptedEmvFormat",
            "baseName": "encrypted_emv_format",
            "type": "number"
        },
        {
            "name": "expirationMonth",
            "baseName": "expiration_month",
            "type": "number"
        },
        {
            "name": "expirationYear",
            "baseName": "expiration_year",
            "type": "number"
        },
        {
            "name": "firstName",
            "baseName": "first_name",
            "type": "string"
        },
        {
            "name": "lastName",
            "baseName": "last_name",
            "type": "string"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "Name"
        },
        {
            "name": "number",
            "baseName": "number",
            "type": "string"
        }
    ];
    static getAttributeTypeMap() {
        return CardPresentInstrumentForm.attributeTypeMap;
    }
}
exports.CardPresentInstrumentForm = CardPresentInstrumentForm;
(function (CardPresentInstrumentForm) {
    let TypeEnum;
    (function (TypeEnum) {
        TypeEnum[TypeEnum["BankAccount"] = 'BANK_ACCOUNT'] = "BankAccount";
        TypeEnum[TypeEnum["Virtual"] = 'VIRTUAL'] = "Virtual";
        TypeEnum[TypeEnum["Token"] = 'TOKEN'] = "Token";
        TypeEnum[TypeEnum["SwipedPaymentCard"] = 'SWIPED_PAYMENT_CARD'] = "SwipedPaymentCard";
        TypeEnum[TypeEnum["PaymentCardPresent"] = 'PAYMENT_CARD_PRESENT'] = "PaymentCardPresent";
        TypeEnum[TypeEnum["PaymentCard"] = 'PAYMENT_CARD'] = "PaymentCard";
        TypeEnum[TypeEnum["VantivOmniToken"] = 'VANTIV_OMNI_TOKEN'] = "VantivOmniToken";
    })(TypeEnum = CardPresentInstrumentForm.TypeEnum || (CardPresentInstrumentForm.TypeEnum = {}));
    let AvailableAccountTypeEnum;
    (function (AvailableAccountTypeEnum) {
        AvailableAccountTypeEnum[AvailableAccountTypeEnum["Balance"] = 'BALANCE'] = "Balance";
        AvailableAccountTypeEnum[AvailableAccountTypeEnum["Ledgered"] = 'LEDGERED'] = "Ledgered";
    })(AvailableAccountTypeEnum = CardPresentInstrumentForm.AvailableAccountTypeEnum || (CardPresentInstrumentForm.AvailableAccountTypeEnum = {}));
})(CardPresentInstrumentForm = exports.CardPresentInstrumentForm || (exports.CardPresentInstrumentForm = {}));
